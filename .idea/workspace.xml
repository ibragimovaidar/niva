<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e25c70ea-4b00-46ea-9f3b-8f50abae265b" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/achievement-service-client/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/achievement-service-client/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/bff-service/src/main/java/ru/sber/niva/bffservice/BffServiceApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/bff-service/src/main/java/ru/sber/niva/bffservice/BffServiceApplication.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/bff-service/src/main/java/ru/sber/niva/bffservice/FeignConfiguration.java" beforeDir="false" afterPath="$PROJECT_DIR$/bff-service/src/main/java/ru/sber/niva/bffservice/config/FeignConfiguration.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/bff-service/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/bff-service/src/main/resources/application.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/jira-rest-client/src/main/java/ru/sber/niva/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/jira-rest-client/src/main/java/ru/sber/niva/Main.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Enum" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 8
}]]></component>
  <component name="ProjectId" id="2WCc5Fz4MTzakbqSyp6kq0uDKNN" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "master",
    "jdk.selected.JAVA_MODULE": "corretto-11",
    "last_opened_file_path": "/home/aydar/IdeaProjects/niva/achievement-service-client/src/main/java/ru/sber/niva/achievementclient/dto",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="ReactorSettings">
    <option name="notificationShown" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="ru.sber.niva.bffservice.dto.request" />
      <recent name="ru.sber.niva.achievements.controller.rest" />
      <recent name="ru.sber.niva.achievements.service" />
      <recent name="ru.sber.niva.achievements.model.domain" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/achievement-service-client/src/main/java/ru/sber/niva/achievementclient/dto" />
      <recent name="$PROJECT_DIR$/niva-achivements/src/main/java/ru/sber/niva/achievements/controller/rest" />
      <recent name="$PROJECT_DIR$/niva-achivements/src/main/java/ru/sber/niva/achievements/exception" />
    </key>
  </component>
  <component name="RunManager" selected="Spring Boot.BffServiceApplication">
    <configuration name="BffServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
      <module name="bff-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="ru.sber.niva.bffservice.BffServiceApplication" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="ru.sber.niva.bffservice.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="NivaAchievementsService" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
      <module name="niva-achivements" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="ru.sber.niva.achievements.NivaAchievementsService" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="ru.sber.niva.achievements.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.postgres: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="postgres" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Spring Boot.BffServiceApplication" />
        <item itemvalue="Spring Boot.NivaAchievementsService" />
        <item itemvalue="Docker.docker-compose.yml.postgres: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e25c70ea-4b00-46ea-9f3b-8f50abae265b" name="Changes" comment="" />
      <created>1696239820766</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1696239820766</updated>
      <workItem from="1696239821797" duration="29963000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/niva-achivements/src/main/java/ru/sber/niva/achievements/controller/rest/AchievementController.java</url>
          <line>45</line>
          <option name="timeStamp" value="9" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>